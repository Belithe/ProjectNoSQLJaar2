@model WebAppClient.ViewModels.TicketVM
@functions{
    enum PriorityEnum {
        Low,
        Medium,
        High
    }
    enum DaysEnum {
        One,
        Seven,
        Thirty
    }

    enum TypeEnum { 
        Software,
        Hardware,
        Other
    }
}

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{

    <div class="form-horizontal">
        <h4>Add Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">

        @Html.LabelFor(model => model.DateTime, htmlAttributes: new { @class = "control-label col-md-2 box" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.TextBoxFor(model => model.DateTime, new { @type = "date", @class = "form-control datepicker" })
            @Html.ValidationMessageFor(model => model.DateTime, "", new { @class = "text-danger" })
        </div>

        <div>
            @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2 box" })
            <div class="col-md-10" style="margin-bottom: 1em">
                @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2 box" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(TypeEnum))), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.User, htmlAttributes: new { @class = "control-label col-md-2 box" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.DropDownListFor(model => model.User.FirstName, Model.UserList)
            @Html.ValidationMessageFor(model => model.User, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.DropDownListFor(model => model.Priority, new SelectList(Enum.GetValues(typeof(PriorityEnum))), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Deadline, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.DropDownListFor(model => model.Deadline, new SelectList(Enum.GetValues(typeof(DaysEnum))), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Deadline, "", new { @class = "text-danger" })
        </div>

        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10" style="margin-bottom: 1em">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

